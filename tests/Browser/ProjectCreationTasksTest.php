<?php

namespace Tests\Browser;

use App\Models\User;
use App\Services\AI\Contracts\AITaskResponse;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Laravel\Dusk\Browser;
use Tests\DuskTestCase;

class ProjectCreationTasksTest extends DuskTestCase
{
    use DatabaseMigrations, MocksAIServices;

    protected function setUp(): void
    {
        parent::setUp();

        // Mock AI services to prevent real API calls
        $this->mockAIServices();

        // Set up default organization structure
        $this->artisan('db:seed', ['--class' => 'OrganizationSeeder']);
    }

    /**
     * Test the project creation tasks endpoint with empty title but AI-generated title.
     */
    public function test_project_creation_tasks_with_empty_title_uses_ai_generated_title()
    {
        $organization = \App\Models\Organization::getDefault();
        $group = $organization->defaultGroup();

        $user = User::factory()->create([
            'organization_id' => $organization->id,
            'pending_approval' => false,
        ]);
        $user->joinGroup($group);

        // Mock AI response that includes a project title
        $mockResponse = AITaskResponse::success(
            tasks: [
                [
                    'title' => 'Define Business Model',
                    'description' => 'Research and determine the type of business to start, including its mission, products/services, and revenue streams.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 1,
                    'size' => 'm',
                    'initial_story_points' => 8,
                    'current_story_points' => 8,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Conduct Market Research',
                    'description' => 'Gather data on target audience, competitors, and market trends to inform business decisions.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 2,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Create Business Plan',
                    'description' => 'Develop a comprehensive business plan outlining goals, strategies, financial projections, and operational plans.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 3,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Register Business',
                    'description' => 'Complete necessary registrations, licenses, and permits to establish the business legally.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 4,
                    'size' => 's',
                    'initial_story_points' => 5,
                    'current_story_points' => 5,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Secure Funding',
                    'description' => 'Explore and secure funding options, such as loans, grants, or investors, to support business operations.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 5,
                    'size' => 'xl',
                    'initial_story_points' => 21,
                    'current_story_points' => 21,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Establish Business Operations',
                    'description' => 'Set up necessary infrastructure, systems, and processes to launch and run the business.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 6,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
            ],
            projectTitle: 'Business Development Project',
            notes: [
                'Generated by: cerebras (llama-4-maverick-17b-128e-instruct)',
                'Consider seeking professional advice for business registration and planning',
                'Develop a contingency plan for potential risks and challenges'
            ],
            summary: 'Establishing a new business venture',
            problems: [],
            suggestions: []
        );

        // Override the AI mock to return our specific response
        $this->app->bind('ai', function () use ($mockResponse) {
            return new class($mockResponse) {
                private $mockResponse;

                public function __construct($mockResponse)
                {
                    $this->mockResponse = $mockResponse;
                }

                public function generateTasks(string $projectDescription, array $schema = [], array $options = []): AITaskResponse
                {
                    return $this->mockResponse;
                }

                public function provider(string $name = null): self
                {
                    return $this;
                }

                public function hasConfiguredProvider(): bool
                {
                    return true;
                }

                public function getAvailableProviders(): array
                {
                    return ['cerebras', 'openai', 'anthropic'];
                }

                public function testProvider(string $name = null): array
                {
                    return ['success' => true, 'message' => 'Mock provider test successful'];
                }
            };
        });

        $this->browse(function (Browser $browser) use ($user, $group) {
            $browser->loginAs($user)
                ->visit('/dashboard/projects/create/tasks?' . http_build_query([
                    'description' => 'I want to build a business',
                    'ai_provider' => 'cerebras',
                    'ai_model' => 'llama-4-maverick-17b-128e-instruct',
                    'project_type' => 'iterative',
                    'default_iteration_length_weeks' => '2',
                    'auto_create_iterations' => 'false',
                    'group_id' => $group->id
                ]))
                ->waitForText('AI Generated Tasks')
                ->assertSee('AI Generated Tasks')
                ->waitForText('Define Business Model', 10)
                ->assertSee('Define Business Model')
                ->assertSee('Conduct Market Research')
                ->assertSee('Create Business Plan')
                ->assertSee('Register Business')
                ->assertSee('Secure Funding')
                ->assertSee('Establish Business Operations')
                ->assertSee('Business Development Project') // AI-generated title should be displayed
                ->assertSee('Establishing a new business venture') // AI summary should be displayed
                ->assertSee('Generated by: cerebras (llama-4-maverick-17b-128e-instruct)')
                ->assertSee('Consider seeking professional advice for business registration and planning')
                ->assertSee('Develop a contingency plan for potential risks and challenges')
                ->screenshot('project-creation-tasks-success');
        });
    }

    /**
     * Test the project creation tasks endpoint with empty title and no AI-generated title.
     */
    public function test_project_creation_tasks_with_empty_title_no_ai_title()
    {
        $organization = \App\Models\Organization::getDefault();
        $group = $organization->defaultGroup();

        $user = User::factory()->create([
            'organization_id' => $organization->id,
            'pending_approval' => false,
        ]);
        $user->joinGroup($group);

        // Mock AI response that does NOT include a project title
        $mockResponse = AITaskResponse::success(
            tasks: [
                [
                    'title' => 'Project Setup & Planning',
                    'description' => 'Set up project structure and define requirements based on: I want to build a business',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 1,
                ],
                [
                    'title' => 'Design System Creation',
                    'description' => 'Create design system and component library',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 2,
                ],
                [
                    'title' => 'Core Feature Development',
                    'description' => 'Implement main functionality based on project description',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 3,
                ],
                [
                    'title' => 'Testing & Quality Assurance',
                    'description' => 'Write tests and ensure code quality',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 4,
                ],
                [
                    'title' => 'Documentation & Deployment',
                    'description' => 'Create documentation and deploy the project',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 5,
                ],
            ],
            projectTitle: null, // No AI-generated title
            notes: [],
            summary: null,
            problems: [],
            suggestions: []
        );

        // Override the AI mock to return our specific response
        $this->app->bind('ai', function () use ($mockResponse) {
            return new class($mockResponse) {
                private $mockResponse;

                public function __construct($mockResponse)
                {
                    $this->mockResponse = $mockResponse;
                }

                public function generateTasks(string $projectDescription, array $schema = [], array $options = []): AITaskResponse
                {
                    return $this->mockResponse;
                }

                public function provider(string $name = null): self
                {
                    return $this;
                }

                public function hasConfiguredProvider(): bool
                {
                    return true;
                }

                public function getAvailableProviders(): array
                {
                    return ['cerebras', 'openai', 'anthropic'];
                }

                public function testProvider(string $name = null): array
                {
                    return ['success' => true, 'message' => 'Mock provider test successful'];
                }
            };
        });

        $this->browse(function (Browser $browser) use ($user, $group) {
            $browser->loginAs($user)
                ->visit('/dashboard/projects/create/tasks?' . http_build_query([
                    'description' => 'I want to build a business',
                    'ai_provider' => 'cerebras',
                    'ai_model' => 'llama-4-maverick-17b-128e-instruct',
                    'project_type' => 'iterative',
                    'default_iteration_length_weeks' => '2',
                    'auto_create_iterations' => 'false',
                    'group_id' => $group->id
                ]))
                ->waitForText('AI Generated Tasks')
                ->assertSee('AI Generated Tasks')
                ->waitForText('Project Setup & Planning', 10)
                ->assertSee('Project Setup & Planning')
                ->assertSee('Design System Creation')
                ->assertSee('Core Feature Development')
                ->assertSee('Testing & Quality Assurance')
                ->assertSee('Documentation & Deployment')
                ->assertDontSee('null') // Title should not show as "null"
                ->screenshot('project-creation-tasks-no-ai-title');
        });
    }

    /**
     * Test that the form handles the exact payload from the user's issue.
     */
    public function test_project_creation_tasks_with_exact_user_payload()
    {
        $organization = \App\Models\Organization::getDefault();
        $group = $organization->defaultGroup();

        $user = User::factory()->create([
            'organization_id' => $organization->id,
            'pending_approval' => false,
        ]);
        $user->joinGroup($group);

        // Mock AI response matching the user's expected output
        $mockResponse = AITaskResponse::success(
            tasks: [
                [
                    'title' => 'Define Business Model',
                    'description' => 'Research and determine the type of business to start, including its mission, products/services, and revenue streams.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 1,
                    'size' => 'm',
                    'initial_story_points' => 8,
                    'current_story_points' => 8,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Conduct Market Research',
                    'description' => 'Gather data on target audience, competitors, and market trends to inform business decisions.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 2,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Create Business Plan',
                    'description' => 'Develop a comprehensive business plan outlining goals, strategies, financial projections, and operational plans.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 3,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Register Business',
                    'description' => 'Complete necessary registrations, licenses, and permits to establish the business legally.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 4,
                    'size' => 's',
                    'initial_story_points' => 5,
                    'current_story_points' => 5,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Secure Funding',
                    'description' => 'Explore and secure funding options, such as loans, grants, or investors, to support business operations.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 5,
                    'size' => 'xl',
                    'initial_story_points' => 21,
                    'current_story_points' => 21,
                    'story_points_change_count' => 0,
                ],
                [
                    'title' => 'Establish Business Operations',
                    'description' => 'Set up necessary infrastructure, systems, and processes to launch and run the business.',
                    'status' => 'pending',
                    'due_date' => null,
                    'sort_order' => 6,
                    'size' => 'l',
                    'initial_story_points' => 13,
                    'current_story_points' => 13,
                    'story_points_change_count' => 0,
                ],
            ],
            projectTitle: null, // This is the issue - title should be generated
            notes: [
                'Generated by: cerebras (llama-4-maverick-17b-128e-instruct)',
                'Consider seeking professional advice for business registration and planning',
                'Develop a contingency plan for potential risks and challenges'
            ],
            summary: 'Establishing a new business venture',
            problems: [],
            suggestions: []
        );

        // Override the AI mock to return our specific response
        $this->app->bind('ai', function () use ($mockResponse) {
            return new class($mockResponse) {
                private $mockResponse;

                public function __construct($mockResponse)
                {
                    $this->mockResponse = $mockResponse;
                }

                public function generateTasks(string $projectDescription, array $schema = [], array $options = []): AITaskResponse
                {
                    return $this->mockResponse;
                }

                public function provider(string $name = null): self
                {
                    return $this;
                }

                public function hasConfiguredProvider(): bool
                {
                    return true;
                }

                public function getAvailableProviders(): array
                {
                    return ['cerebras', 'openai', 'anthropic'];
                }

                public function testProvider(string $name = null): array
                {
                    return ['success' => true, 'message' => 'Mock provider test successful'];
                }
            };
        });

        $this->browse(function (Browser $browser) use ($user, $group) {
            $browser->loginAs($user)
                ->visit('/dashboard/projects/create/tasks?' . http_build_query([
                    'description' => 'I want to build a business',
                    'ai_provider' => 'cerebras',
                    'ai_model' => 'llama-4-maverick-17b-128e-instruct',
                    'project_type' => 'iterative',
                    'default_iteration_length_weeks' => '2',
                    'auto_create_iterations' => 'false',
                    'group_id' => $group->id
                ]))
                ->waitForText('AI Generated Tasks')
                ->assertSee('AI Generated Tasks')
                ->waitForText('Define Business Model', 10)
                ->assertSee('Define Business Model')
                ->assertSee('Conduct Market Research')
                ->assertSee('Create Business Plan')
                ->assertSee('Register Business')
                ->assertSee('Secure Funding')
                ->assertSee('Establish Business Operations')
                ->assertSee('Establishing a new business venture')
                ->assertSee('Generated by: cerebras (llama-4-maverick-17b-128e-instruct)')
                ->assertSee('Consider seeking professional advice for business registration and planning')
                ->assertSee('Develop a contingency plan for potential risks and challenges')
                ->screenshot('project-creation-tasks-exact-payload');
        });
    }
}
